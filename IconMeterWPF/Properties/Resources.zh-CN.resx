<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutApplication" xml:space="preserve">
    <value>关于 Icon Meter</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CloseApplication" xml:space="preserve">
    <value>关闭 Icon Meter</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>版权</value>
  </data>
  <data name="CPU" xml:space="preserve">
    <value>处理器</value>
  </data>
  <data name="Disk" xml:space="preserve">
    <value>硬盘</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>团队</value>
  </data>
  <data name="LogicalProcessors" xml:space="preserve">
    <value>逻辑处理器</value>
  </data>
  <data name="Memory" xml:space="preserve">
    <value>内存</value>
  </data>
  <data name="Network" xml:space="preserve">
    <value>网络</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>产品</value>
  </data>
  <data name="Receive" xml:space="preserve">
    <value>接收:</value>
  </data>
  <data name="RunAtStartup" xml:space="preserve">
    <value>在系统启动时运行</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>发送:</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="UseVerticalBar" xml:space="preserve">
    <value>使用垂直条</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言:</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Processes" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="LoadAverage" xml:space="preserve">
    <value>平均负载</value>
  </data>
  <data name="VirtualMemory" xml:space="preserve">
    <value>虚拟内存</value>
  </data>
  <data name="Uptime" xml:space="preserve">
    <value>运行时间</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>用戶</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>系统</value>
  </data>
  <data name="Idle" xml:space="preserve">
    <value>闲置</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>天</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>小时</value>
  </data>
  <data name="InUse" xml:space="preserve">
    <value>正在使用</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>可使用</value>
  </data>
  <data name="PublicIP" xml:space="preserve">
    <value>公开 IP</value>
  </data>
  <data name="LocalIP" xml:space="preserve">
    <value>本地 IP</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>上载</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="ReadSpeed" xml:space="preserve">
    <value>读取速度</value>
  </data>
  <data name="WriteSpeed" xml:space="preserve">
    <value>写入速度</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="TaskManager" xml:space="preserve">
    <value>任务管理器</value>
  </data>
  <data name="ControlPanel" xml:space="preserve">
    <value>控制面板</value>
  </data>
  <data name="RefreshIP" xml:space="preserve">
    <value>刷新 IP</value>
  </data>
  <data name="IndividualDisk" xml:space="preserve">
    <value>個別硬盘</value>
  </data>
  <data name="DragHereToMove" xml:space="preserve">
    <value>拖拉这里移动</value>
  </data>
  <data name="BackgroundColor" xml:space="preserve">
    <value>背景颜色</value>
  </data>
  <data name="ShowOnlyTheMostUtilizedProcessors" xml:space="preserve">
    <value>仅显示使用率最高的N个处理器</value>
  </data>
  <data name="UseDarkMode" xml:space="preserve">
    <value>使用深色模式</value>
  </data>
  <data name="in_use" xml:space="preserve">
    <value>正在使用</value>
  </data>
</root>